import java.util.Random;

import javax.crypto.SealedObject;

public class ParallelBruteForceDES {
	private static Thread[] threads;
	private static DecryptThread[] decryptThreads;
	private static SealedObject sealedObj;
	private static int numThreads;
	private static long numKeyBits;
	private static void parseArgs(String[] args) {
		if (args.length != 2) {
			System.err.println("Usage: BruteForceDES #threads key_size_in_bits");
			System.exit(0);
		}
		try {
			numThreads = Integer.parseInt(args[0]);
			numKeyBits = Long.parseLong(args[1]);
		} catch (NumberFormatException e) {
			System.err.println("Usage: BruteForceDES #threads key_size_in_bits");
		}
	}
	private static void sealText(String text) {
		long maxkey = ~(0L);
		maxkey = maxkey >>> (64 -numKeyBits);
		SealedDES enccipher = new SealedDES();
		Random generator = new Random();
		long key = generator.nextLong();
		key = key & maxkey;
		enccipher.setKey(key);
		sealedObj = enccipher.encrypt(text);
		
	}
	private static void initDecryptThreads() {
		
	}
	public static void main(String[] args) {
		parseArgs(args);
		initDecryptThreads();
	}
}
